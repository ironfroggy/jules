#!/usr/bin/env python

from __future__ import print_function

import os
import shutil
import operator
import itertools

import yaml

from straight.command import Command, SubCommand, Option
from straight.plugin import load

import jules


class Init(Command):

    version = "0.1"

    projectname = Option(dest='projectname', action='store')

    def execute(self, **kwargs):
        projectname = kwargs["projectname"]
        if not projectname:
            print("error: You must specify a project name")
        elif os.path.exists(projectname):
            print("error: The path '{}' already exists".format(projectname))
        else:
            starter_path = os.path.join(os.path.dirname(jules.__file__), 'starters', 'default')
            shutil.copytree(starter_path, projectname)
        

class Build(Command):

    version = "0.2"

    force = Option(short='-f', dest='force', action='store_true')

    def execute(self, **kwargs):
        output_dir = self.parent.args['output']
        if not os.path.exists(output_dir) or self.args['force']:
            engine = jules.JulesEngine(os.path.abspath('.'))
            engine.prepare()
            engine.prepare_bundles()
            engine.render_site(output_dir)
            
        else:
            print("error: Refusing to replace {} output directory!".format(output_dir))


class Serve(Command):

    port = Option(dest='port', default=8000)

    def execute(self, port, **kwargs):
        output_dir = self.parent.args['output']

        import SimpleHTTPServer
        import SocketServer

        handler = SimpleHTTPServer.SimpleHTTPRequestHandler
        handler.extensions_map[''] = 'text/html'
        httpd = SocketServer.TCPServer(("", int(port)), handler)

        os.chdir(output_dir)
        httpd.serve_forever()


class JulesCommand(Command):

    version = "0.2"

    output = Option(short='-o', long='--output', dest='output', nargs=1, default='_build')

    basecopy = SubCommand('build', Build)
    serve = SubCommand('serve', Serve)
    init = SubCommand('init', Init)


if __name__ == '__main__':
    import sys
    JulesCommand().run(sys.argv[1:])
